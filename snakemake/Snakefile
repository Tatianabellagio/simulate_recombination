# =================================================================================================
#     Dependencies
# =================================================================================================

##### when run in cluster #################
#module load BCFtools/1.10.2
#module load SLiM/4.0.1
#module load HTSlib/1.10.2 
##### when run in cluster #################

replicates = list(range(0,config['replicates']+1))
optima = list(range(0,config['optima']+1))


##checkpoints for unknowns number of files 
## parameter space explor

## base files 
configfile: "config.yaml"

######

rule run_python_script:
    input:
        chr_number = config['chr_number'] , 
        base_vcf = config['base_vcf'], 
        optimum_ecotypes = config['optimum_ecotypes.csv'], 
        base_fasta = config['base_fasta']

    output:
        bed_sc="arq_pi{pi}_beta{beta}/selection_coef.bed", 
        optima='arq_pi{pi}_beta{beta}/optima_files/optima.csv', 
        slim='arq_pi{pi}_beta{beta}/optima_files/optima_slim.txt'
    params:
        pi = wildcards.pi,
        beta = wildcards.beta
    conda:
        'envs/base_env.yaml'
    script:
        "pi_beta_calc.py"

rule run_bash_script:
    input:
        vcf_file = config['base_vcf'], 
        bed_sc="arq_pi{pi}_beta{beta}/selection_coef.bed"
    output:
        "arq_pi{pi}_beta{beta}/annotated_vcf"
    shell:
        "./annotate.sh {input} {output}"

rule run_slim_script:
    input:
        "arq_pi{pi}_beta{beta}/annotated_vcf", 
        'arq_pi{pi}_beta{beta}/optima_files/optima_slim.txt'
    output:
        expand(
            "arq_pi{pi}_beta{beta}/vcf_files/optima{optima}/subp{replicates}.vcf",
            optimas=optimas,
            replicates=replicates
        )
    shell:
        "slim arabidopsis_evolve.slim -i {input} -o {output}"

rule run_python_script2:
    input:
        expand(
            "arq_pi{pi}_beta{beta}/vcf_files/optima{optima}/subp{replicates}.vcf",
            optimas=optimas,
            replicates=replicates
        )
    output:
        expand(
            'arq_pi{pi}_beta{beta}/simulation_results/allele_counts.csv',
            pi=config['pi'],
            beta=config['beta']
        ),
        expand(
            'arq_pi{pi}_beta{beta}/simulation_results/pool_sizes.csv',
            pi=config['pi'],
            beta=config['beta']
        )
    conda:
        'envs/base_env.yaml'
    shell:
        'python allele_counts_from_vcf.py -i {input} -o {output}'

rule all:
    input:
        expand(
            'arq_pi{pi}_beta{beta}/simulation_results/allele_counts.csv',
            pi=config['pi'],
            beta=config['beta']
        ),
        expand(
            'arq_pi{pi}_beta{beta}/simulation_results/pool_sizes.csv',
            pi=config['pi'],
            beta=config['beta']
        )
